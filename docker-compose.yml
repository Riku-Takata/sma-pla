services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: always

  web:
    build: 
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "5001:5001"
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      - redis
    restart: always
    networks:
      - app-network

  notification:
    build: 
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "5002:5002"
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - BACKEND_URL=http://web:5001
    volumes:
      - ./frontend:/app
    depends_on:
      - redis
      - web
    restart: always
    networks:
      - app-network

  ngrok:
    image: ngrok/ngrok:latest
    ports:
      - "4040:4040"
    env_file:
      - .env
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTH_TOKEN}
    command: 
      - "http"
      - "web:5001"
      - "--log"
      - "stdout"
    networks:
      - app-network
    depends_on:
      - web

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
    driver: local